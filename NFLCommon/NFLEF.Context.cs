//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NFLCommon
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NFLDBEntities : DbContext
    {
        public NFLDBEntities()
            : base("name=NFLDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Conference> Conferences { get; set; }
        public virtual DbSet<DefensiveStat> DefensiveStats { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<Fumble> Fumbles { get; set; }
        public virtual DbSet<Game> Games { get; set; }
        public virtual DbSet<GameType> GameTypes { get; set; }
        public virtual DbSet<KickingStat> KickingStats { get; set; }
        public virtual DbSet<KickReturnStat> KickReturnStats { get; set; }
        public virtual DbSet<PassingStat> PassingStats { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<PlayersTeamsGame> PlayersTeamsGames { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<PuntingStat> PuntingStats { get; set; }
        public virtual DbSet<PuntReturnStat> PuntReturnStats { get; set; }
        public virtual DbSet<ReceivingStat> ReceivingStats { get; set; }
        public virtual DbSet<RushingStat> RushingStats { get; set; }
        public virtual DbSet<SeasonType> SeasonTypes { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
    
        public virtual int CREATE_DefensiveStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> tackles, Nullable<int> assists, Nullable<int> sacks, Nullable<int> interceptions, Nullable<int> forcedFumbles, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var tacklesParameter = tackles.HasValue ?
                new ObjectParameter("Tackles", tackles) :
                new ObjectParameter("Tackles", typeof(int));
    
            var assistsParameter = assists.HasValue ?
                new ObjectParameter("Assists", assists) :
                new ObjectParameter("Assists", typeof(int));
    
            var sacksParameter = sacks.HasValue ?
                new ObjectParameter("Sacks", sacks) :
                new ObjectParameter("Sacks", typeof(int));
    
            var interceptionsParameter = interceptions.HasValue ?
                new ObjectParameter("Interceptions", interceptions) :
                new ObjectParameter("Interceptions", typeof(int));
    
            var forcedFumblesParameter = forcedFumbles.HasValue ?
                new ObjectParameter("ForcedFumbles", forcedFumbles) :
                new ObjectParameter("ForcedFumbles", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_DefensiveStat", gameIdParameter, playerIdParameter, teamParameter, tacklesParameter, assistsParameter, sacksParameter, interceptionsParameter, forcedFumblesParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_Fumble(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> total, Nullable<int> recovered, Nullable<int> teamRecovered, Nullable<int> yards, Nullable<int> lost, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var recoveredParameter = recovered.HasValue ?
                new ObjectParameter("Recovered", recovered) :
                new ObjectParameter("Recovered", typeof(int));
    
            var teamRecoveredParameter = teamRecovered.HasValue ?
                new ObjectParameter("TeamRecovered", teamRecovered) :
                new ObjectParameter("TeamRecovered", typeof(int));
    
            var yardsParameter = yards.HasValue ?
                new ObjectParameter("Yards", yards) :
                new ObjectParameter("Yards", typeof(int));
    
            var lostParameter = lost.HasValue ?
                new ObjectParameter("Lost", lost) :
                new ObjectParameter("Lost", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_Fumble", gameIdParameter, playerIdParameter, teamParameter, totalParameter, recoveredParameter, teamRecoveredParameter, yardsParameter, lostParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_Game(string homeTeam, string awayTeam, Nullable<System.DateTime> dateTime, string seasonType, Nullable<int> season, Nullable<int> eid, Nullable<int> gameKey, Nullable<int> week, Nullable<int> wTScoreFirstQtr, Nullable<int> wTScoreSecondQtr, Nullable<int> wTScoreThirdQtr, Nullable<int> wTScoreFourthQtr, Nullable<int> wTScoreOT, Nullable<int> wTScoreFinal, Nullable<int> lTScoreFirstQtr, Nullable<int> lTScoreSecondQtr, Nullable<int> lTScoreThirdQtr, Nullable<int> lTScoreFourthQtr, Nullable<int> lTScoreOT, Nullable<int> lTScoreFinal, Nullable<bool> neutralField, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var homeTeamParameter = homeTeam != null ?
                new ObjectParameter("HomeTeam", homeTeam) :
                new ObjectParameter("HomeTeam", typeof(string));
    
            var awayTeamParameter = awayTeam != null ?
                new ObjectParameter("AwayTeam", awayTeam) :
                new ObjectParameter("AwayTeam", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var seasonTypeParameter = seasonType != null ?
                new ObjectParameter("SeasonType", seasonType) :
                new ObjectParameter("SeasonType", typeof(string));
    
            var seasonParameter = season.HasValue ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(int));
    
            var eidParameter = eid.HasValue ?
                new ObjectParameter("Eid", eid) :
                new ObjectParameter("Eid", typeof(int));
    
            var gameKeyParameter = gameKey.HasValue ?
                new ObjectParameter("GameKey", gameKey) :
                new ObjectParameter("GameKey", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("Week", week) :
                new ObjectParameter("Week", typeof(int));
    
            var wTScoreFirstQtrParameter = wTScoreFirstQtr.HasValue ?
                new ObjectParameter("WTScoreFirstQtr", wTScoreFirstQtr) :
                new ObjectParameter("WTScoreFirstQtr", typeof(int));
    
            var wTScoreSecondQtrParameter = wTScoreSecondQtr.HasValue ?
                new ObjectParameter("WTScoreSecondQtr", wTScoreSecondQtr) :
                new ObjectParameter("WTScoreSecondQtr", typeof(int));
    
            var wTScoreThirdQtrParameter = wTScoreThirdQtr.HasValue ?
                new ObjectParameter("WTScoreThirdQtr", wTScoreThirdQtr) :
                new ObjectParameter("WTScoreThirdQtr", typeof(int));
    
            var wTScoreFourthQtrParameter = wTScoreFourthQtr.HasValue ?
                new ObjectParameter("WTScoreFourthQtr", wTScoreFourthQtr) :
                new ObjectParameter("WTScoreFourthQtr", typeof(int));
    
            var wTScoreOTParameter = wTScoreOT.HasValue ?
                new ObjectParameter("WTScoreOT", wTScoreOT) :
                new ObjectParameter("WTScoreOT", typeof(int));
    
            var wTScoreFinalParameter = wTScoreFinal.HasValue ?
                new ObjectParameter("WTScoreFinal", wTScoreFinal) :
                new ObjectParameter("WTScoreFinal", typeof(int));
    
            var lTScoreFirstQtrParameter = lTScoreFirstQtr.HasValue ?
                new ObjectParameter("LTScoreFirstQtr", lTScoreFirstQtr) :
                new ObjectParameter("LTScoreFirstQtr", typeof(int));
    
            var lTScoreSecondQtrParameter = lTScoreSecondQtr.HasValue ?
                new ObjectParameter("LTScoreSecondQtr", lTScoreSecondQtr) :
                new ObjectParameter("LTScoreSecondQtr", typeof(int));
    
            var lTScoreThirdQtrParameter = lTScoreThirdQtr.HasValue ?
                new ObjectParameter("LTScoreThirdQtr", lTScoreThirdQtr) :
                new ObjectParameter("LTScoreThirdQtr", typeof(int));
    
            var lTScoreFourthQtrParameter = lTScoreFourthQtr.HasValue ?
                new ObjectParameter("LTScoreFourthQtr", lTScoreFourthQtr) :
                new ObjectParameter("LTScoreFourthQtr", typeof(int));
    
            var lTScoreOTParameter = lTScoreOT.HasValue ?
                new ObjectParameter("LTScoreOT", lTScoreOT) :
                new ObjectParameter("LTScoreOT", typeof(int));
    
            var lTScoreFinalParameter = lTScoreFinal.HasValue ?
                new ObjectParameter("LTScoreFinal", lTScoreFinal) :
                new ObjectParameter("LTScoreFinal", typeof(int));
    
            var neutralFieldParameter = neutralField.HasValue ?
                new ObjectParameter("NeutralField", neutralField) :
                new ObjectParameter("NeutralField", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_Game", homeTeamParameter, awayTeamParameter, dateTimeParameter, seasonTypeParameter, seasonParameter, eidParameter, gameKeyParameter, weekParameter, wTScoreFirstQtrParameter, wTScoreSecondQtrParameter, wTScoreThirdQtrParameter, wTScoreFourthQtrParameter, wTScoreOTParameter, wTScoreFinalParameter, lTScoreFirstQtrParameter, lTScoreSecondQtrParameter, lTScoreThirdQtrParameter, lTScoreFourthQtrParameter, lTScoreOTParameter, lTScoreFinalParameter, neutralFieldParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_KickingStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> fieldGoalsMade, Nullable<int> fieldGoalsAttempted, Nullable<int> yards, Nullable<int> totalPoints, Nullable<int> extraPointsMade, Nullable<int> extraPointsMissed, Nullable<int> extraPointsAttempted, Nullable<int> extraPointsBlocked, Nullable<int> extraPointsTotal, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var fieldGoalsMadeParameter = fieldGoalsMade.HasValue ?
                new ObjectParameter("FieldGoalsMade", fieldGoalsMade) :
                new ObjectParameter("FieldGoalsMade", typeof(int));
    
            var fieldGoalsAttemptedParameter = fieldGoalsAttempted.HasValue ?
                new ObjectParameter("FieldGoalsAttempted", fieldGoalsAttempted) :
                new ObjectParameter("FieldGoalsAttempted", typeof(int));
    
            var yardsParameter = yards.HasValue ?
                new ObjectParameter("Yards", yards) :
                new ObjectParameter("Yards", typeof(int));
    
            var totalPointsParameter = totalPoints.HasValue ?
                new ObjectParameter("TotalPoints", totalPoints) :
                new ObjectParameter("TotalPoints", typeof(int));
    
            var extraPointsMadeParameter = extraPointsMade.HasValue ?
                new ObjectParameter("ExtraPointsMade", extraPointsMade) :
                new ObjectParameter("ExtraPointsMade", typeof(int));
    
            var extraPointsMissedParameter = extraPointsMissed.HasValue ?
                new ObjectParameter("ExtraPointsMissed", extraPointsMissed) :
                new ObjectParameter("ExtraPointsMissed", typeof(int));
    
            var extraPointsAttemptedParameter = extraPointsAttempted.HasValue ?
                new ObjectParameter("ExtraPointsAttempted", extraPointsAttempted) :
                new ObjectParameter("ExtraPointsAttempted", typeof(int));
    
            var extraPointsBlockedParameter = extraPointsBlocked.HasValue ?
                new ObjectParameter("ExtraPointsBlocked", extraPointsBlocked) :
                new ObjectParameter("ExtraPointsBlocked", typeof(int));
    
            var extraPointsTotalParameter = extraPointsTotal.HasValue ?
                new ObjectParameter("ExtraPointsTotal", extraPointsTotal) :
                new ObjectParameter("ExtraPointsTotal", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_KickingStat", gameIdParameter, playerIdParameter, teamParameter, fieldGoalsMadeParameter, fieldGoalsAttemptedParameter, yardsParameter, totalPointsParameter, extraPointsMadeParameter, extraPointsMissedParameter, extraPointsAttemptedParameter, extraPointsBlockedParameter, extraPointsTotalParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_KickReturnStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> returns, Nullable<int> average, Nullable<int> touchdowns, Nullable<int> @long, Nullable<int> longTouchdown, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var returnsParameter = returns.HasValue ?
                new ObjectParameter("Returns", returns) :
                new ObjectParameter("Returns", typeof(int));
    
            var averageParameter = average.HasValue ?
                new ObjectParameter("Average", average) :
                new ObjectParameter("Average", typeof(int));
    
            var touchdownsParameter = touchdowns.HasValue ?
                new ObjectParameter("Touchdowns", touchdowns) :
                new ObjectParameter("Touchdowns", typeof(int));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(int));
    
            var longTouchdownParameter = longTouchdown.HasValue ?
                new ObjectParameter("LongTouchdown", longTouchdown) :
                new ObjectParameter("LongTouchdown", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_KickReturnStat", gameIdParameter, playerIdParameter, teamParameter, returnsParameter, averageParameter, touchdownsParameter, longParameter, longTouchdownParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_PassingStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> attempts, Nullable<int> completions, Nullable<int> yards, Nullable<int> touchdowns, Nullable<int> interceptions, Nullable<int> twoPointAttempts, Nullable<int> twoPointMakes, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var attemptsParameter = attempts.HasValue ?
                new ObjectParameter("Attempts", attempts) :
                new ObjectParameter("Attempts", typeof(int));
    
            var completionsParameter = completions.HasValue ?
                new ObjectParameter("Completions", completions) :
                new ObjectParameter("Completions", typeof(int));
    
            var yardsParameter = yards.HasValue ?
                new ObjectParameter("Yards", yards) :
                new ObjectParameter("Yards", typeof(int));
    
            var touchdownsParameter = touchdowns.HasValue ?
                new ObjectParameter("Touchdowns", touchdowns) :
                new ObjectParameter("Touchdowns", typeof(int));
    
            var interceptionsParameter = interceptions.HasValue ?
                new ObjectParameter("Interceptions", interceptions) :
                new ObjectParameter("Interceptions", typeof(int));
    
            var twoPointAttemptsParameter = twoPointAttempts.HasValue ?
                new ObjectParameter("TwoPointAttempts", twoPointAttempts) :
                new ObjectParameter("TwoPointAttempts", typeof(int));
    
            var twoPointMakesParameter = twoPointMakes.HasValue ?
                new ObjectParameter("TwoPointMakes", twoPointMakes) :
                new ObjectParameter("TwoPointMakes", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_PassingStat", gameIdParameter, playerIdParameter, teamParameter, attemptsParameter, completionsParameter, yardsParameter, touchdownsParameter, interceptionsParameter, twoPointAttemptsParameter, twoPointMakesParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_Player(string firstName, string lastName, string position, string team, Nullable<System.DateTime> birthdate, string college, string fullName, string gsisId, string gsisName, Nullable<int> height, Nullable<int> number, string profileId, string profileUrl, string status, Nullable<int> weight, Nullable<int> yearsPro, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var collegeParameter = college != null ?
                new ObjectParameter("College", college) :
                new ObjectParameter("College", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            var gsisNameParameter = gsisName != null ?
                new ObjectParameter("GsisName", gsisName) :
                new ObjectParameter("GsisName", typeof(string));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var profileIdParameter = profileId != null ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(string));
    
            var profileUrlParameter = profileUrl != null ?
                new ObjectParameter("ProfileUrl", profileUrl) :
                new ObjectParameter("ProfileUrl", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var yearsProParameter = yearsPro.HasValue ?
                new ObjectParameter("YearsPro", yearsPro) :
                new ObjectParameter("YearsPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_Player", firstNameParameter, lastNameParameter, positionParameter, teamParameter, birthdateParameter, collegeParameter, fullNameParameter, gsisIdParameter, gsisNameParameter, heightParameter, numberParameter, profileIdParameter, profileUrlParameter, statusParameter, weightParameter, yearsProParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_PuntingStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> punts, Nullable<int> yards, Nullable<int> average, Nullable<int> insideTwenty, Nullable<int> @long, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var puntsParameter = punts.HasValue ?
                new ObjectParameter("Punts", punts) :
                new ObjectParameter("Punts", typeof(int));
    
            var yardsParameter = yards.HasValue ?
                new ObjectParameter("Yards", yards) :
                new ObjectParameter("Yards", typeof(int));
    
            var averageParameter = average.HasValue ?
                new ObjectParameter("Average", average) :
                new ObjectParameter("Average", typeof(int));
    
            var insideTwentyParameter = insideTwenty.HasValue ?
                new ObjectParameter("InsideTwenty", insideTwenty) :
                new ObjectParameter("InsideTwenty", typeof(int));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_PuntingStat", gameIdParameter, playerIdParameter, teamParameter, puntsParameter, yardsParameter, averageParameter, insideTwentyParameter, longParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_PuntReturnStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> returns, Nullable<int> average, Nullable<int> touchdowns, Nullable<int> @long, Nullable<int> longTouchdown, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var returnsParameter = returns.HasValue ?
                new ObjectParameter("Returns", returns) :
                new ObjectParameter("Returns", typeof(int));
    
            var averageParameter = average.HasValue ?
                new ObjectParameter("Average", average) :
                new ObjectParameter("Average", typeof(int));
    
            var touchdownsParameter = touchdowns.HasValue ?
                new ObjectParameter("Touchdowns", touchdowns) :
                new ObjectParameter("Touchdowns", typeof(int));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(int));
    
            var longTouchdownParameter = longTouchdown.HasValue ?
                new ObjectParameter("LongTouchdown", longTouchdown) :
                new ObjectParameter("LongTouchdown", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_PuntReturnStat", gameIdParameter, playerIdParameter, teamParameter, returnsParameter, averageParameter, touchdownsParameter, longParameter, longTouchdownParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_ReceivingStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> receptions, Nullable<int> yards, Nullable<int> touchdowns, Nullable<int> @long, Nullable<int> twoPointAttempts, Nullable<int> twoPointsMade, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var receptionsParameter = receptions.HasValue ?
                new ObjectParameter("Receptions", receptions) :
                new ObjectParameter("Receptions", typeof(int));
    
            var yardsParameter = yards.HasValue ?
                new ObjectParameter("Yards", yards) :
                new ObjectParameter("Yards", typeof(int));
    
            var touchdownsParameter = touchdowns.HasValue ?
                new ObjectParameter("Touchdowns", touchdowns) :
                new ObjectParameter("Touchdowns", typeof(int));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(int));
    
            var twoPointAttemptsParameter = twoPointAttempts.HasValue ?
                new ObjectParameter("TwoPointAttempts", twoPointAttempts) :
                new ObjectParameter("TwoPointAttempts", typeof(int));
    
            var twoPointsMadeParameter = twoPointsMade.HasValue ?
                new ObjectParameter("TwoPointsMade", twoPointsMade) :
                new ObjectParameter("TwoPointsMade", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_ReceivingStat", gameIdParameter, playerIdParameter, teamParameter, receptionsParameter, yardsParameter, touchdownsParameter, longParameter, twoPointAttemptsParameter, twoPointsMadeParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_RushingStat(Nullable<System.Guid> gameId, Nullable<System.Guid> playerId, string team, Nullable<int> attempts, Nullable<int> yards, Nullable<int> touchdowns, Nullable<int> @long, Nullable<int> twoPointAttempts, Nullable<int> twoPointsMade, string gsisId, ObjectParameter id, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(System.Guid));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var attemptsParameter = attempts.HasValue ?
                new ObjectParameter("Attempts", attempts) :
                new ObjectParameter("Attempts", typeof(int));
    
            var yardsParameter = yards.HasValue ?
                new ObjectParameter("Yards", yards) :
                new ObjectParameter("Yards", typeof(int));
    
            var touchdownsParameter = touchdowns.HasValue ?
                new ObjectParameter("Touchdowns", touchdowns) :
                new ObjectParameter("Touchdowns", typeof(int));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(int));
    
            var twoPointAttemptsParameter = twoPointAttempts.HasValue ?
                new ObjectParameter("TwoPointAttempts", twoPointAttempts) :
                new ObjectParameter("TwoPointAttempts", typeof(int));
    
            var twoPointsMadeParameter = twoPointsMade.HasValue ?
                new ObjectParameter("TwoPointsMade", twoPointsMade) :
                new ObjectParameter("TwoPointsMade", typeof(int));
    
            var gsisIdParameter = gsisId != null ?
                new ObjectParameter("GsisId", gsisId) :
                new ObjectParameter("GsisId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_RushingStat", gameIdParameter, playerIdParameter, teamParameter, attemptsParameter, yardsParameter, touchdownsParameter, longParameter, twoPointAttemptsParameter, twoPointsMadeParameter, gsisIdParameter, id, errorMessage, errorNumber);
        }
    
        public virtual int CREATE_Team(string prefix, string city, string nickName, string conference, string division, ObjectParameter id)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("NickName", nickName) :
                new ObjectParameter("NickName", typeof(string));
    
            var conferenceParameter = conference != null ?
                new ObjectParameter("Conference", conference) :
                new ObjectParameter("Conference", typeof(string));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_Team", prefixParameter, cityParameter, nickNameParameter, conferenceParameter, divisionParameter, id);
        }
    
        public virtual int DELETEAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETEAll");
        }
    
        public virtual int DELETEStats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETEStats");
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> GET_GameIdByEid(Nullable<int> eid)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("Eid", eid) :
                new ObjectParameter("Eid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GET_GameIdByEid", eidParameter);
        }
    
        public virtual ObjectResult<GET_Games_Result> GET_Games(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_Games_Result>("GET_Games", yearParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> GET_PlayerIdByGsisId(string gsid)
        {
            var gsidParameter = gsid != null ?
                new ObjectParameter("Gsid", gsid) :
                new ObjectParameter("Gsid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GET_PlayerIdByGsisId", gsidParameter);
        }
    
        public virtual int UPDATE_Game(Nullable<System.Guid> gameId, string homeTeam, string awayTeam, Nullable<System.DateTime> dateTime, string seasonType, Nullable<int> season, Nullable<int> eid, Nullable<int> gameKey, Nullable<int> week, Nullable<int> hTScoreFirstQtr, Nullable<int> hTScoreSecondQtr, Nullable<int> hTScoreThirdQtr, Nullable<int> hTScoreFourthQtr, Nullable<int> hTScoreOT, Nullable<int> hTScoreFinal, Nullable<int> aTScoreFirstQtr, Nullable<int> aTScoreSecondQtr, Nullable<int> aTScoreThirdQtr, Nullable<int> aTScoreFourthQtr, Nullable<int> aTScoreOT, Nullable<int> aTScoreFinal, Nullable<bool> neutralField, ObjectParameter errorMessage, ObjectParameter errorNumber)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(System.Guid));
    
            var homeTeamParameter = homeTeam != null ?
                new ObjectParameter("HomeTeam", homeTeam) :
                new ObjectParameter("HomeTeam", typeof(string));
    
            var awayTeamParameter = awayTeam != null ?
                new ObjectParameter("AwayTeam", awayTeam) :
                new ObjectParameter("AwayTeam", typeof(string));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var seasonTypeParameter = seasonType != null ?
                new ObjectParameter("SeasonType", seasonType) :
                new ObjectParameter("SeasonType", typeof(string));
    
            var seasonParameter = season.HasValue ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(int));
    
            var eidParameter = eid.HasValue ?
                new ObjectParameter("Eid", eid) :
                new ObjectParameter("Eid", typeof(int));
    
            var gameKeyParameter = gameKey.HasValue ?
                new ObjectParameter("GameKey", gameKey) :
                new ObjectParameter("GameKey", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("Week", week) :
                new ObjectParameter("Week", typeof(int));
    
            var hTScoreFirstQtrParameter = hTScoreFirstQtr.HasValue ?
                new ObjectParameter("HTScoreFirstQtr", hTScoreFirstQtr) :
                new ObjectParameter("HTScoreFirstQtr", typeof(int));
    
            var hTScoreSecondQtrParameter = hTScoreSecondQtr.HasValue ?
                new ObjectParameter("HTScoreSecondQtr", hTScoreSecondQtr) :
                new ObjectParameter("HTScoreSecondQtr", typeof(int));
    
            var hTScoreThirdQtrParameter = hTScoreThirdQtr.HasValue ?
                new ObjectParameter("HTScoreThirdQtr", hTScoreThirdQtr) :
                new ObjectParameter("HTScoreThirdQtr", typeof(int));
    
            var hTScoreFourthQtrParameter = hTScoreFourthQtr.HasValue ?
                new ObjectParameter("HTScoreFourthQtr", hTScoreFourthQtr) :
                new ObjectParameter("HTScoreFourthQtr", typeof(int));
    
            var hTScoreOTParameter = hTScoreOT.HasValue ?
                new ObjectParameter("HTScoreOT", hTScoreOT) :
                new ObjectParameter("HTScoreOT", typeof(int));
    
            var hTScoreFinalParameter = hTScoreFinal.HasValue ?
                new ObjectParameter("HTScoreFinal", hTScoreFinal) :
                new ObjectParameter("HTScoreFinal", typeof(int));
    
            var aTScoreFirstQtrParameter = aTScoreFirstQtr.HasValue ?
                new ObjectParameter("ATScoreFirstQtr", aTScoreFirstQtr) :
                new ObjectParameter("ATScoreFirstQtr", typeof(int));
    
            var aTScoreSecondQtrParameter = aTScoreSecondQtr.HasValue ?
                new ObjectParameter("ATScoreSecondQtr", aTScoreSecondQtr) :
                new ObjectParameter("ATScoreSecondQtr", typeof(int));
    
            var aTScoreThirdQtrParameter = aTScoreThirdQtr.HasValue ?
                new ObjectParameter("ATScoreThirdQtr", aTScoreThirdQtr) :
                new ObjectParameter("ATScoreThirdQtr", typeof(int));
    
            var aTScoreFourthQtrParameter = aTScoreFourthQtr.HasValue ?
                new ObjectParameter("ATScoreFourthQtr", aTScoreFourthQtr) :
                new ObjectParameter("ATScoreFourthQtr", typeof(int));
    
            var aTScoreOTParameter = aTScoreOT.HasValue ?
                new ObjectParameter("ATScoreOT", aTScoreOT) :
                new ObjectParameter("ATScoreOT", typeof(int));
    
            var aTScoreFinalParameter = aTScoreFinal.HasValue ?
                new ObjectParameter("ATScoreFinal", aTScoreFinal) :
                new ObjectParameter("ATScoreFinal", typeof(int));
    
            var neutralFieldParameter = neutralField.HasValue ?
                new ObjectParameter("NeutralField", neutralField) :
                new ObjectParameter("NeutralField", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_Game", gameIdParameter, homeTeamParameter, awayTeamParameter, dateTimeParameter, seasonTypeParameter, seasonParameter, eidParameter, gameKeyParameter, weekParameter, hTScoreFirstQtrParameter, hTScoreSecondQtrParameter, hTScoreThirdQtrParameter, hTScoreFourthQtrParameter, hTScoreOTParameter, hTScoreFinalParameter, aTScoreFirstQtrParameter, aTScoreSecondQtrParameter, aTScoreThirdQtrParameter, aTScoreFourthQtrParameter, aTScoreOTParameter, aTScoreFinalParameter, neutralFieldParameter, errorMessage, errorNumber);
        }
    }
}
